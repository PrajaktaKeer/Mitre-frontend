{"ast":null,"code":"var _jsxFileName = \"/home/prajakta/prajakta/MITRE/Git-Repos/MITRE-frontend/src/Components/Section2/section2.jsx\",\n    _s = $RefreshSig$();\n\n/*\nMid-section section-2 with search bar to diplay searched components on screen and add filters\n*/\n//import requirements\nimport React, { useState } from 'react';\nimport 'font-awesome/css/font-awesome.min.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/fontawesome-free-solid';\nimport Card from '../Card/Card';\nimport './section2.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { findTechByID, findTechByName, findTechByAll, findTechBySub, findTechByTactic } from '../../reducers/techniques'; //define component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Section2 = props => {\n  _s();\n\n  //useDispatch to dispatch imported reducer functions\n  const dispatch = useDispatch(); //useState hooks to update and set states\n\n  const [searchValue, setVal] = useState('');\n  const [searchBy, setsearchBy] = useState('All');\n  const [called, setCalled] = useState(false);\n  const object = useSelector(state => state.techniqueObj.techniqueObject);\n\n  const onSearchKey = e => {\n    setVal(e.target.value);\n    console.log(searchValue);\n  }; //findBy defined to split searched values and dispatch to respective reducer functions\n\n\n  const findBy = () => {\n    setCalled(true);\n    console.log(\"searchby\" + searchBy);\n\n    switch (searchBy) {\n      case 'ID':\n        dispatch(findTechByID(searchValue));\n        break;\n\n      case 'Tech':\n        dispatch(findTechByName(searchValue));\n        break;\n\n      case 'All':\n        dispatch(findTechByAll(searchValue));\n        break;\n\n      case 'Subtech':\n        dispatch(findTechBySub(searchValue));\n        break;\n\n      case 'Tactic':\n        dispatch(findTechByTactic(searchValue));\n        break;\n\n      default:\n        break;\n    }\n  }; //set searched value\n\n\n  const handleSelect = e => {\n    console.log(\"handle select \" + e.target.value);\n    setsearchBy(e.target.value);\n  }; //set list if object not null\n\n\n  if (object !== null) {\n    props.setList(object);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"dropdown\",\n        name: \"findby\",\n        onChange: handleSelect,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"All\",\n          id: \"dropdown-content\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"ID\",\n          id: \"dropdown-content\",\n          children: \"ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Tech\",\n          id: \"dropdown-content\",\n          children: \"Technique\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Subtech\",\n          id: \"dropdown-content\",\n          children: \"Subtechnique\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Tactic\",\n          id: \"dropdown-content\",\n          children: \"Tactic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: onSearchKey,\n        className: \"search-bar1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: findBy,\n        id: \"i\",\n        className: \"fas\",\n        icon: faSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-results\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: object == null ? null : called && /*#__PURE__*/_jsxDEV(Card, {\n          ID: searchValue,\n          list: object,\n          setSelectedCard: props.setSelectedCard\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Section2, \"ZBsaUR6GaUSw2IgAj8KrgqXMhXA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Section2;\nexport default Section2;\n\nvar _c;\n\n$RefreshReg$(_c, \"Section2\");","map":{"version":3,"sources":["/home/prajakta/prajakta/MITRE/Git-Repos/MITRE-frontend/src/Components/Section2/section2.jsx"],"names":["React","useState","FontAwesomeIcon","faSearch","Card","useDispatch","useSelector","findTechByID","findTechByName","findTechByAll","findTechBySub","findTechByTactic","Section2","props","dispatch","searchValue","setVal","searchBy","setsearchBy","called","setCalled","object","state","techniqueObj","techniqueObject","onSearchKey","e","target","value","console","log","findBy","handleSelect","setList","setSelectedCard"],"mappings":"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","sourcesContent":["/*\nMid-section section-2 with search bar to diplay searched components on screen and add filters\n*/\n\n//import requirements\nimport React, {useState} from 'react';\nimport 'font-awesome/css/font-awesome.min.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch } from '@fortawesome/fontawesome-free-solid'\n\nimport Card from '../Card/Card';\nimport './section2.css';\nimport { useDispatch,useSelector } from 'react-redux';\nimport{\n    findTechByID, findTechByName,findTechByAll,findTechBySub, findTechByTactic\n} from '../../reducers/techniques';\n\n\n//define component\nconst Section2=props=>{\n\n   //useDispatch to dispatch imported reducer functions\n    const dispatch=useDispatch();\n\n     //useState hooks to update and set states\n    const [searchValue, setVal] = useState('');\n    const [searchBy, setsearchBy] = useState('All');\n    const [called, setCalled] = useState(false);\n\n    const object=useSelector(state=>state.techniqueObj.techniqueObject);\n    \n    const onSearchKey=e=>{ \n        setVal(e.target.value);\n        console.log(searchValue)\n        \n    };\n\n    //findBy defined to split searched values and dispatch to respective reducer functions\n    const findBy=()=>{\n\n        setCalled(true);\n        console.log(\"searchby\" + searchBy)\n        switch(searchBy) {\n            case 'ID': dispatch(findTechByID(searchValue));\n                        break;\n            case 'Tech': dispatch(findTechByName(searchValue));\n                         break;\n            case 'All':dispatch(findTechByAll(searchValue));\n                        break;\n            case 'Subtech':dispatch(findTechBySub(searchValue));\n                            break;\n            case 'Tactic':dispatch(findTechByTactic(searchValue));\n                            break;\n            default: break;\n        }\n        \n\n    };\n    \n    //set searched value\n    const handleSelect = (e) => {\n        console.log(\"handle select \"+ e.target.value)\n        setsearchBy(e.target.value)\n    }\n\n    //set list if object not null\n    if(object!==null) {\n        props.setList(object);\n        \n    }\n\n    return(\n        <div className=\"outer\">\n             <div className = \"search-section\">\n                <select className=\"dropdown\" name=\"findby\" onChange={handleSelect}>\n                    <option value=\"All\" id=\"dropdown-content\">All</option>\n                    <option value=\"ID\" id=\"dropdown-content\">ID</option>\n                    <option value=\"Tech\" id=\"dropdown-content\">Technique</option>\n                    <option value=\"Subtech\" id=\"dropdown-content\">Subtechnique</option>\n                    <option value=\"Tactic\" id=\"dropdown-content\">Tactic</option>     \n                </select> \n                <input  onChange={onSearchKey} className = \"search-bar1\"/>\n                <FontAwesomeIcon onClick={findBy} id=\"i\" className=\"fas\" icon={faSearch} />     \n            </div>\n\n            <div className = \"search-results\"> \n                <div>{\n                object==null?null:(called && <Card ID={searchValue} list={object} setSelectedCard={props.setSelectedCard}/>)\n                }</div>\n            </div>\n            \n        </div>\n    );\n};\n\nexport default Section2;\n"]},"metadata":{},"sourceType":"module"}