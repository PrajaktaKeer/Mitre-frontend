[{"D:\\Mitre-frontend\\MITRE-frontend\\src\\index.js":"1","D:\\Mitre-frontend\\MITRE-frontend\\src\\App.js":"2","D:\\Mitre-frontend\\MITRE-frontend\\src\\reportWebVitals.js":"3","D:\\Mitre-frontend\\MITRE-frontend\\src\\reducers\\index.js":"4","D:\\Mitre-frontend\\MITRE-frontend\\src\\reducers\\techniques.js":"5","D:\\Mitre-frontend\\MITRE-frontend\\src\\webpages\\index.js":"6","D:\\Mitre-frontend\\MITRE-frontend\\src\\webpages\\Home.jsx":"7","D:\\Mitre-frontend\\MITRE-frontend\\src\\Components\\PolicyScreen\\PolicyScreen.jsx":"8","D:\\Mitre-frontend\\MITRE-frontend\\src\\Components\\Model\\Model.jsx":"9","D:\\Mitre-frontend\\MITRE-frontend\\src\\Components\\Navbar\\navbar.jsx":"10","D:\\Mitre-frontend\\MITRE-frontend\\src\\Components\\Model\\Status.js":"11","D:\\Mitre-frontend\\MITRE-frontend\\src\\Components\\Model\\Scrapebtn.js":"12","D:\\Mitre-frontend\\MITRE-frontend\\src\\Components\\RingView\\RingView.jsx":"13","D:\\Mitre-frontend\\MITRE-frontend\\src\\Components\\CardDetails\\CardDetails.jsx":"14","D:\\Mitre-frontend\\MITRE-frontend\\src\\Components\\Section2\\section2.jsx":"15","D:\\Mitre-frontend\\MITRE-frontend\\src\\Components\\Card\\Card.jsx":"16"},{"size":766,"mtime":1647007559793,"results":"17","hashOfConfig":"18"},{"size":202,"mtime":1647007559737,"results":"19","hashOfConfig":"18"},{"size":375,"mtime":1647007559796,"results":"20","hashOfConfig":"18"},{"size":645,"mtime":1647007559794,"results":"21","hashOfConfig":"18"},{"size":4272,"mtime":1647007559795,"results":"22","hashOfConfig":"18"},{"size":708,"mtime":1647007559800,"results":"23","hashOfConfig":"18"},{"size":1061,"mtime":1647007559799,"results":"24","hashOfConfig":"18"},{"size":2305,"mtime":1647008429417,"results":"25","hashOfConfig":"18"},{"size":287,"mtime":1647008180186,"results":"26","hashOfConfig":"18"},{"size":2436,"mtime":1647007559755,"results":"27","hashOfConfig":"18"},{"size":1761,"mtime":1646993821333,"results":"28","hashOfConfig":"18"},{"size":1998,"mtime":1647010465638,"results":"29","hashOfConfig":"18"},{"size":4351,"mtime":1647007559763,"results":"30","hashOfConfig":"18"},{"size":1044,"mtime":1647007559743,"results":"31","hashOfConfig":"18"},{"size":3308,"mtime":1647007559765,"results":"32","hashOfConfig":"18"},{"size":1388,"mtime":1647007559740,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"pz46gp",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"37"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"37"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"37"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"37"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"37"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"D:\\Mitre-frontend\\MITRE-frontend\\src\\index.js",["73","74"],"/*Index.js rendering ReactDOM*/\r\n\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from 'react-redux';\r\nimport store from './reducers/index';\r\nimport {createBrowserHistory} from 'history';\r\nimport {Router} from 'react-router';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n  <Provider store={store}>\r\n    <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  \r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["75","76"],"D:\\Mitre-frontend\\MITRE-frontend\\src\\App.js",[],"D:\\Mitre-frontend\\MITRE-frontend\\src\\reportWebVitals.js",[],"D:\\Mitre-frontend\\MITRE-frontend\\src\\reducers\\index.js",[],"D:\\Mitre-frontend\\MITRE-frontend\\src\\reducers\\techniques.js",["77"],"/*Reducer to update techniques state with constants defined too.*/\r\n\r\nimport axios from \"axios\";\r\n\r\n//Define constantss\r\nconst FETCH_TECHID = 'FETCH_TECHID';\r\nconst FETCH_TECHNAME = 'FETCH_TECHNAME';\r\nconst FETCH_TECHALL= 'FETCH_TECHALL';\r\nconst FETCH_TECHSUB= 'FETCH_TECHSUB';\r\nconst FETCH_TECHTACTIC= 'FETCH_TECHTACTIC';\r\n\r\n\r\n//Define Endpoints and also base path to be mapped\r\nconst ENDPOINTS = {\r\n    //\"base_path\": \"/mit/els-api-service\",\r\n    //\"base_path\": \"https://a85263f971abe47ee9429220e351b65f-c60ac902f2bae3ba.elb.us-east-1.amazonaws.com/mit/els-api-service\",\r\n    \"base_path\": \"http://localhost:8080/\",\r\n    \"techID\": \"/techID\",\r\n    \"techName\": \"/techName\",\r\n    \"techTactic\": \"/techTactic\",\r\n    \"techSubtechnique\": \"/techSubtechnique\",\r\n    \"techSubtechniqueOf\": \"/techSubtechniqueOf\",\r\n    \"techAll\":\"/techAll\"\r\n}\r\n\r\n//Axios create headers and allow cross origin\r\nconst http = axios.create({\r\n    headers: {\r\n        \"Content-type\": \"application/json\",\r\n        \"Access-Control-Allow-Origin\": \"*\"\r\n    }\r\n});\r\naxios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\r\n\r\n\r\n//Define initial state as empty array of techniqueObject\r\nconst initialState = {\r\n\r\n    techniqueObject: []\r\n\r\n};\r\n\r\n//Tech reducer mapping state and actions in switch-case\r\nconst techReducer = function (state = initialState, action) {\r\n    if (typeof state === 'undefined') state = initialState;\r\n\r\n\r\n    switch (action.type) {\r\n\r\n        case FETCH_TECHID:\r\n            \r\n            return {\r\n                ...state,\r\n                techniqueObject: action.payload\r\n            }\r\n        case FETCH_TECHNAME:\r\n\r\n            return {\r\n                ...state,\r\n                techniqueObject: action.payload\r\n            }\r\n        \r\n        case FETCH_TECHALL:\r\n            return{\r\n                ...state,\r\n                techniqueObject:action.payload\r\n            }\r\n\r\n        case FETCH_TECHSUB:\r\n            return{\r\n                ...state,\r\n                techniqueObject:action.payload\r\n            }\r\n\r\n        case FETCH_TECHSUB:\r\n            return{\r\n                ...state,\r\n                techniqueObject:action.payload\r\n            }\r\n\r\n        case FETCH_TECHTACTIC:\r\n            return{\r\n                ...state,\r\n                techniqueObject:action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n/*\r\nDefine all initialised constants, use http to get interact with REST endpoint and dispatch data \r\nwith type and data in payload for mapping in reducer\r\n*/\r\nexport const findTechByID = (id) => (dispatch) => {\r\n\r\n\r\n    http.get(ENDPOINTS.base_path + ENDPOINTS.techID + `/${id}`).then((response) => {\r\n\r\n        console.log(\"RESPONSE \" + JSON.stringify(response))\r\n        console.log(\"RESPONSE data\" + JSON.stringify(response.data))\r\n        console.log(typeof(response.data))\r\n        let response_list=[]\r\n        response_list = response.data.map((obj)=>{\r\n            return obj\r\n        })\r\n\r\n        dispatch({\r\n            type: FETCH_TECHID,\r\n            payload: response_list\r\n        })\r\n    })\r\n};\r\n\r\nexport const findTechByName = (name) => (dispatch) => {\r\n\r\n    console.log(\"find tech\")\r\n    http.get(ENDPOINTS.base_path + ENDPOINTS.techName + `/${name}`).then((response) => {\r\n\r\n        dispatch({\r\n            type: FETCH_TECHNAME,\r\n            payload: response.data\r\n        })\r\n    })\r\n};\r\n\r\nexport const findTechByAll=(all)=>(dispatch)=>{\r\n    console.log(\"find tech allll\")\r\n    http.get(ENDPOINTS.base_path + ENDPOINTS.techAll + `/${all}`).then((response) => {\r\n        console.log(response.data)\r\n        dispatch({\r\n            type: FETCH_TECHALL,\r\n            payload: response.data\r\n        })\r\n    })\r\n};\r\n\r\nexport const findTechBySub=(sub)=>(dispatch)=>{\r\n    http.get(ENDPOINTS.base_path + ENDPOINTS.techSubtechnique + `/${sub}`).then((response) => {\r\n\r\n        dispatch({\r\n            type: FETCH_TECHSUB,\r\n            payload: response.data\r\n        })\r\n    })\r\n};\r\n\r\n\r\nexport const findTechByTactic=(tactic)=>(dispatch)=>{\r\n    http.get(ENDPOINTS.base_path + ENDPOINTS.techTactic + `/${tactic}`).then((response) => {\r\n\r\n        dispatch({\r\n            type: FETCH_TECHTACTIC,\r\n            payload: response.data\r\n        })\r\n    })\r\n};\r\n\r\n\r\nexport default techReducer;","D:\\Mitre-frontend\\MITRE-frontend\\src\\webpages\\index.js",[],"D:\\Mitre-frontend\\MITRE-frontend\\src\\webpages\\Home.jsx",["78","79","80","81","82","83","84"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport NavigationBar from '../Components/Navbar/navbar.jsx';\r\nimport Section2 from '../Components/Section2/section2';\r\nimport RingView from '../Components/RingView/RingView';\r\nimport CardDetails from '../Components/CardDetails/CardDetails'\r\nimport {useState} from 'react'\r\n\r\nconst Home = () => {\r\n    \r\n    //update states using useState hook\r\n    const [isOpened, setIsOpened] = useState(true);\r\n    const [list, setList] = useState(null);\r\n    const [selectedCard, setSelectedCard] = useState(null);\r\n    \r\n    //toggle to open/close cards\r\n    const toggle = () => {\r\n            setIsOpened(isOpened => !isOpened);\r\n        };\r\n\r\n    //define object to be displayed as null\r\n    const object=undefined;\r\n\r\n    return (\r\n        <div>\r\n            {/* <NavigationBar/> */}\r\n            <Section2 setList={setList} list={list} setSelectedCard={setSelectedCard}/>\r\n            <RingView list={list}/>\r\n            {/* <h1>Hello</h1> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","D:\\Mitre-frontend\\MITRE-frontend\\src\\Components\\PolicyScreen\\PolicyScreen.jsx",["85","86","87","88","89","90","91"],"import React, {useState} from 'react';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport  Button  from 'react-bootstrap/Button';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/fontawesome-free-solid';\r\nimport { Link } from 'react-router';\r\nimport './policyscreen.css';\r\nimport axios from 'axios';\r\n// import { Button } from 'bootstrap';\r\nimport upload from '../../images/upload.png'\r\n\r\n\r\n\r\nconst PolicyScreen=props=>{\r\n\r\n    // const hiddenFileInput=React.useRef(null);\r\n    // const handleClick=event=>{\r\n    //     hiddenFileInput.current.click();\r\n    // }\r\n\r\n    const [file, setFile] = useState();\r\n\r\n    const handleChange=event=>{\r\n        const fileUpload=event.target.files[0];\r\n        //props.handleFile(fileUpload);\r\n        setFile(fileUpload);\r\n        //uploadFile(file);\r\n    }\r\n\r\n\r\n    function uploadFile(e) {\r\n        e.preventDefault();\r\n        const fileUpload=e.target.files[0];\r\n        const formData = new FormData();\r\n        formData.append(\"file\", fileUpload);\r\n        console.log(formData)\r\n        axios\r\n          .post(\"http://127.0.0.1:5000/upload\", formData)\r\n          .then(res => console.log(res))\r\n          .catch(err => console.warn(err));\r\n    }\r\n\r\n    // return(\r\n          \r\n    //     <div className = \"policy\">\r\n    //         <div className=\"policy_title\">\r\n    //             <h1> Upload a Report</h1>\r\n    //             <img src={upload} alt=\"\"/>\r\n    //         </div>\r\n            \r\n\r\n    //         <div className=\"policy_searchbar\">\r\n    //             Choose a File :\r\n    //             <input className = \"input-section\" type=\"file\" name=\"file\" onChange={uploadFile}/>\r\n            \r\n\r\n\r\n    return(\r\n        <div className=\"outer\">\r\n             <div className = \"search-section\">\r\n             <input className = \"input-section\" type=\"file\" name=\"file\" onChange={uploadFile}/>\r\n                {/* <input   type=\"file\" className = \"input-section\" ref={hiddenFileInput} onChange={handleChange}/> */}\r\n                {/* <FontAwesomeIcon  id=\"i\" className=\"fas\" icon={faSearch} />      */}\r\n            </div>\r\n\r\n            <div className = \"search-results\"> \r\n                \r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n\r\n\r\n\r\n};\r\n\r\n\r\nexport default PolicyScreen","D:\\Mitre-frontend\\MITRE-frontend\\src\\Components\\Model\\Model.jsx",[],"D:\\Mitre-frontend\\MITRE-frontend\\src\\Components\\Navbar\\navbar.jsx",[],"D:\\Mitre-frontend\\MITRE-frontend\\src\\Components\\Model\\Status.js",["92","93"],"import React, { Component, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport './Scrapebtn.css';\r\n\r\nfunction Status(){\r\n  // const [initialData, setInitialData] = useState([{}])\r\n\r\n  // useEffect(()=>{\r\n  //   fetch('/date').then(\r\n  //     response => response.json()\r\n  //   ).then( data => setInitialData(data))\r\n  // },[]);\r\n\r\n  const [initialData, setInitialData] = useState(null)\r\n\r\n function showtimestamp(){\r\n   axios({\r\n     method:\"GET\",\r\n     url: \"/date\",\r\n   })\r\n   .then((response) => {\r\n     const res = response.data\r\n     setInitialData(({\r\n       curr_date: res.date,\r\n       curr_time: res.time\r\n     }))\r\n   }).catch((error) => {\r\n    if(error.response){\r\n     console.log(error.response)\r\n     console.log(error.response.status)\r\n     console.log(error.response.headers)\r\n    }\r\n  })\r\n  \r\n }\r\n  return(\r\n    <div className=\"Status\">\r\n      <button className='scrape_button' onClick={showtimestamp}>Show Timestamp</button>  \r\n      {/* <h3>Data Scraped on Date: {initialData.curr_date}, Time: {initialData.curr_time}</h3> */}\r\n      {initialData && <div>\r\n        <h3>Data Scraped on Date: {initialData.curr_date}, Time: {initialData.curr_time}</h3>\r\n            </div>\r\n        }\r\n    </div>\r\n  );\r\n}\r\n// class Status extends Component {\r\n//   constructor(props){\r\n//     super(props)\r\n//     this.state = {\r\n//         message: ''\r\n//     }\r\n// }\r\n\r\n// showtimestamp(){\r\n//     this.setState({\r\n//         message:'Scraping is In-progress'\r\n//     })\r\n// }\r\n// render(){\r\n//     return(\r\n//         <>\r\n//          <button className='scrape_button' onClick={this.showtimestamp.bind(this)}>Show Timestamp</button>     \r\n//         <h3>{this.state.message}</h3>\r\n//      </>\r\n//     )\r\n// }\r\n// }\r\nexport default Status;","D:\\Mitre-frontend\\MITRE-frontend\\src\\Components\\Model\\Scrapebtn.js",["94","95","96","97"],"D:\\Mitre-frontend\\MITRE-frontend\\src\\Components\\RingView\\RingView.jsx",["98"],"/*\r\nRing view to diaply complete details of clicked/searched input\r\n*/\r\n\r\n//import requirements\r\nimport React from 'react'\r\nimport './RingView.css'\r\n\r\n\r\n\r\n//define component\r\nfunction RingView(props) {\r\n\r\n    let cards = [];\r\n\r\n\r\n\r\n    const getObject = (obj) => {\r\n        if(obj!==null && obj!==undefined) \r\n            return (\r\n                <div>\r\n                {\r\n                    Object.keys(obj).map((key, i) => (\r\n                    <div key={i}>\r\n                        <span><strong>{key}</strong></span>\r\n                        <span>{obj[key]}</span>\r\n                    </div>\r\n                    ))\r\n                }\r\n                </div>\r\n            );\r\n        else\r\n            return (\r\n                <div></div>\r\n            );\r\n              \r\n\r\n    }\r\n\r\n    if(props.list!==null) {\r\n        cards=props.list.map((x)=>{\r\n            if(x!=null){\r\n\r\n                let sublist = []\r\n                if(x.subtechniques!=null) {\r\n                    x.subtechniques.map((s)=>{\r\n                        sublist.push(s + \" , \")\r\n                        return null\r\n                    })\r\n                }\r\n\r\n                let dtslist = []\r\n                let dtskeys = []\r\n                console.log(\"DATA SOURCES : \" + JSON.stringify(x.datasources))\r\n                if(x.datasources!=undefined) {\r\n                    dtslist = Object.keys(x.datasources).map((key)=>{\r\n                        return x.datasources[key]                    })\r\n                    console.log(dtslist)\r\n                    dtskeys = Object.keys(x.datasources).map((key)=>{\r\n                        return key\r\n                    })\r\n                    console.log(dtskeys)\r\n                }\r\n\r\n                \r\n\r\n\r\n                return(\r\n                    \r\n                    <div className = \"text\">\r\n                        <ul>\r\n                            <li><strong style={{color: \"#D41D3F\"}}>{x.techniquename}</strong></li><br/>\r\n                            <li><strong>ID :</strong> {x.tid}</li><br/>\r\n                            <li><strong>Tactic :</strong> {x.tactic}</li><br/>\r\n                            <li><strong>Platforms :</strong> {x.platforms}</li><br/>\r\n                            <li><strong>Version :</strong> {x.version}</li><br/>\r\n                            <li><strong>Sub-techniques : </strong>{sublist}</li><br/>\r\n                            <li><strong>Sub technique of : </strong>{x.subtechniqueof}</li>\r\n                            <strong>Detection:</strong>\r\n                            <div>\r\n                                {x.detection}\r\n                            </div><br/>\r\n                            <strong>Description:</strong>\r\n                            <div>\r\n                                {x.description}\r\n                            </div><br/>\r\n                            <div>\r\n                                <strong>Mitigations:</strong>\r\n                                {getObject(x.mitigations)}\r\n                            </div><br/>\r\n                            <strong>Data Sources:</strong>\r\n                            <div>\r\n\r\n                                {dtskeys}\r\n                            </div>\r\n                            {/* <li>\r\n                                <strong>Data Sources:</strong>\r\n                                <div>{getObject(x.datasources)}</div>\r\n                            </li><br/> */}\r\n                            <li>\r\n                                <strong>Procedure Examples</strong>\r\n                                <div>{getObject(x.procedureexamples)}</div>\r\n                            </li><br/>\r\n                            <li>\r\n                                <strong>Contributers</strong>\r\n                                <div>{x.contributors}</div>\r\n                            </li><br/>\r\n                        </ul>\r\n                    </div>   \r\n                   \r\n                )\r\n            }else return null\r\n            \r\n            \r\n        })    \r\n    }\r\n    \r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <div className = \"header\">\r\n        <p className = \"htext\">Arena</p>\r\n        </div>\r\n\r\n        {\r\n        props.list==null?null:\r\n        <div className = \"ring-container\">\r\n            {cards}\r\n        </div> \r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RingView\r\n","D:\\Mitre-frontend\\MITRE-frontend\\src\\Components\\CardDetails\\CardDetails.jsx",[],"D:\\Mitre-frontend\\MITRE-frontend\\src\\Components\\Section2\\section2.jsx",[],"D:\\Mitre-frontend\\MITRE-frontend\\src\\Components\\Card\\Card.jsx",[],{"ruleId":"99","severity":1,"message":"100","line":11,"column":9,"nodeType":"101","messageId":"102","endLine":11,"endColumn":29},{"ruleId":"99","severity":1,"message":"103","line":12,"column":9,"nodeType":"101","messageId":"102","endLine":12,"endColumn":15},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":75,"column":9,"nodeType":"110","messageId":"111","endLine":79,"endColumn":14},{"ruleId":"99","severity":1,"message":"112","line":2,"column":10,"nodeType":"101","messageId":"102","endLine":2,"endColumn":14},{"ruleId":"99","severity":1,"message":"113","line":4,"column":8,"nodeType":"101","messageId":"102","endLine":4,"endColumn":21},{"ruleId":"99","severity":1,"message":"114","line":7,"column":8,"nodeType":"101","messageId":"102","endLine":7,"endColumn":19},{"ruleId":"99","severity":1,"message":"115","line":13,"column":12,"nodeType":"101","messageId":"102","endLine":13,"endColumn":20},{"ruleId":"99","severity":1,"message":"116","line":15,"column":12,"nodeType":"101","messageId":"102","endLine":15,"endColumn":24},{"ruleId":"99","severity":1,"message":"117","line":18,"column":11,"nodeType":"101","messageId":"102","endLine":18,"endColumn":17},{"ruleId":"99","severity":1,"message":"118","line":23,"column":11,"nodeType":"101","messageId":"102","endLine":23,"endColumn":17},{"ruleId":"99","severity":1,"message":"119","line":3,"column":9,"nodeType":"101","messageId":"102","endLine":3,"endColumn":15},{"ruleId":"99","severity":1,"message":"120","line":4,"column":10,"nodeType":"101","messageId":"102","endLine":4,"endColumn":25},{"ruleId":"99","severity":1,"message":"121","line":5,"column":10,"nodeType":"101","messageId":"102","endLine":5,"endColumn":18},{"ruleId":"99","severity":1,"message":"112","line":6,"column":10,"nodeType":"101","messageId":"102","endLine":6,"endColumn":14},{"ruleId":"99","severity":1,"message":"122","line":10,"column":8,"nodeType":"101","messageId":"102","endLine":10,"endColumn":14},{"ruleId":"99","severity":1,"message":"123","line":21,"column":12,"nodeType":"101","messageId":"102","endLine":21,"endColumn":16},{"ruleId":"99","severity":1,"message":"124","line":23,"column":11,"nodeType":"101","messageId":"102","endLine":23,"endColumn":23},{"ruleId":"99","severity":1,"message":"125","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":26},{"ruleId":"99","severity":1,"message":"126","line":1,"column":38,"nodeType":"101","messageId":"102","endLine":1,"endColumn":47},{"ruleId":"99","severity":1,"message":"125","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":26},{"ruleId":"99","severity":1,"message":"126","line":1,"column":38,"nodeType":"101","messageId":"102","endLine":1,"endColumn":47},{"ruleId":"99","severity":1,"message":"127","line":43,"column":12,"nodeType":"101","messageId":"102","endLine":43,"endColumn":23},{"ruleId":"99","severity":1,"message":"128","line":43,"column":25,"nodeType":"101","messageId":"102","endLine":43,"endColumn":39},{"ruleId":"129","severity":1,"message":"130","line":55,"column":33,"nodeType":"131","messageId":"111","endLine":55,"endColumn":35},"no-unused-vars","'createBrowserHistory' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","no-native-reassign",["132"],"no-negated-in-lhs",["133"],"no-duplicate-case","Duplicate case label.","SwitchCase","unexpected","'Link' is defined but never used.","'NavigationBar' is defined but never used.","'CardDetails' is defined but never used.","'isOpened' is assigned a value but never used.","'selectedCard' is assigned a value but never used.","'toggle' is assigned a value but never used.","'object' is assigned a value but never used.","'Button' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faSearch' is defined but never used.","'upload' is defined but never used.","'file' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'Component' is defined but never used.","'useEffect' is defined but never used.","'initialData' is assigned a value but never used.","'setInitialData' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","no-global-assign","no-unsafe-negation"]